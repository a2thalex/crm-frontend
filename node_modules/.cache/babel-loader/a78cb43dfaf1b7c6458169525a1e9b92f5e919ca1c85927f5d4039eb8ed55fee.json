{"ast":null,"code":"var _jsxFileName = \"/Users/igreg/crm-app/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Grid, Paper, Typography, Box, CircularProgress, Card, CardContent, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport Layout from '../components/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardCard = ({\n  title,\n  value,\n  loading\n}) => /*#__PURE__*/_jsxDEV(Card, {\n  sx: {\n    height: '100%'\n  },\n  children: /*#__PURE__*/_jsxDEV(CardContent, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n_c = DashboardCard;\nconst Dashboard = () => {\n  _s();\n  const [stats, setStats] = useState({\n    totalContacts: 0,\n    totalDeals: 0,\n    totalTasks: 0,\n    dealValue: 0\n  });\n  const [recentActivities, setRecentActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        // In a real app, you would have an endpoint that returns all this data\n        // For now, we'll make separate requests\n        const [contacts, deals, tasks, activities] = await Promise.all([axios.get('/api/contacts'), axios.get('/api/deals'), axios.get('/api/tasks'), axios.get('/api/activities')]);\n        const totalDealValue = deals.data.reduce((sum, deal) => sum + (deal.value || 0), 0);\n        setStats({\n          totalContacts: contacts.data.length,\n          totalDeals: deals.data.length,\n          totalTasks: tasks.data.length,\n          dealValue: totalDealValue\n        });\n\n        // Get most recent 5 activities\n        const sortedActivities = activities.data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)).slice(0, 5);\n        setRecentActivities(sortedActivities);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(DashboardCard, {\n            title: \"Total Contacts\",\n            value: stats.totalContacts,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(DashboardCard, {\n            title: \"Active Deals\",\n            value: stats.totalDeals,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(DashboardCard, {\n            title: \"Open Tasks\",\n            value: stats.totalTasks,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(DashboardCard, {\n            title: \"Total Deal Value\",\n            value: `$${stats.dealValue.toLocaleString()}`,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Recent Activities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"center\",\n              p: 2,\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(List, {\n              children: [recentActivities.map((activity, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: activity.subject,\n                    secondary: `${activity.type} - ${new Date(activity.created_at).toLocaleDateString()}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 23\n                }, this), index < recentActivities.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 63\n                }, this)]\n              }, activity.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this)), recentActivities.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"No recent activities\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"P1xYtOC49MBdGTDmWx1qKE6U7+U=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardCard\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Grid","Paper","Typography","Box","CircularProgress","Card","CardContent","List","ListItem","ListItemText","Divider","Layout","jsxDEV","_jsxDEV","DashboardCard","title","value","loading","sx","height","children","color","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","size","variant","_c","Dashboard","_s","stats","setStats","totalContacts","totalDeals","totalTasks","dealValue","recentActivities","setRecentActivities","setLoading","fetchDashboardData","contacts","deals","tasks","activities","Promise","all","get","totalDealValue","data","reduce","sum","deal","length","sortedActivities","sort","a","b","Date","created_at","slice","error","console","flexGrow","container","spacing","item","xs","sm","md","toLocaleString","p","map","activity","index","Fragment","primary","subject","secondary","type","toLocaleDateString","id","_c2","$RefreshReg$"],"sources":["/Users/igreg/crm-app/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  CircularProgress,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n} from '@mui/material';\nimport Layout from '../components/Layout';\n\nconst DashboardCard = ({ title, value, loading }) => (\n  <Card sx={{ height: '100%' }}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {title}\n      </Typography>\n      {loading ? (\n        <Box display=\"flex\" justifyContent=\"center\">\n          <CircularProgress size={20} />\n        </Box>\n      ) : (\n        <Typography variant=\"h4\">{value}</Typography>\n      )}\n    </CardContent>\n  </Card>\n);\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState({\n    totalContacts: 0,\n    totalDeals: 0,\n    totalTasks: 0,\n    dealValue: 0,\n  });\n  const [recentActivities, setRecentActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        // In a real app, you would have an endpoint that returns all this data\n        // For now, we'll make separate requests\n        const [contacts, deals, tasks, activities] = await Promise.all([\n          axios.get('/api/contacts'),\n          axios.get('/api/deals'),\n          axios.get('/api/tasks'),\n          axios.get('/api/activities')\n        ]);\n\n        const totalDealValue = deals.data.reduce(\n          (sum, deal) => sum + (deal.value || 0),\n          0\n        );\n\n        setStats({\n          totalContacts: contacts.data.length,\n          totalDeals: deals.data.length,\n          totalTasks: tasks.data.length,\n          dealValue: totalDealValue,\n        });\n\n        // Get most recent 5 activities\n        const sortedActivities = activities.data\n          .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))\n          .slice(0, 5);\n\n        setRecentActivities(sortedActivities);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  return (\n    <Layout>\n      <Box sx={{ flexGrow: 1 }}>\n        <Grid container spacing={3}>\n          {/* Stats Cards */}\n          <Grid item xs={12} sm={6} md={3}>\n            <DashboardCard\n              title=\"Total Contacts\"\n              value={stats.totalContacts}\n              loading={loading}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <DashboardCard\n              title=\"Active Deals\"\n              value={stats.totalDeals}\n              loading={loading}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <DashboardCard\n              title=\"Open Tasks\"\n              value={stats.totalTasks}\n              loading={loading}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <DashboardCard\n              title=\"Total Deal Value\"\n              value={`$${stats.dealValue.toLocaleString()}`}\n              loading={loading}\n            />\n          </Grid>\n\n          {/* Recent Activities */}\n          <Grid item xs={12}>\n            <Paper sx={{ p: 2 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Recent Activities\n              </Typography>\n              {loading ? (\n                <Box display=\"flex\" justifyContent=\"center\" p={2}>\n                  <CircularProgress />\n                </Box>\n              ) : (\n                <List>\n                  {recentActivities.map((activity, index) => (\n                    <React.Fragment key={activity.id}>\n                      <ListItem>\n                        <ListItemText\n                          primary={activity.subject}\n                          secondary={`${activity.type} - ${new Date(\n                            activity.created_at\n                          ).toLocaleDateString()}`}\n                        />\n                      </ListItem>\n                      {index < recentActivities.length - 1 && <Divider />}\n                    </React.Fragment>\n                  ))}\n                  {recentActivities.length === 0 && (\n                    <ListItem>\n                      <ListItemText primary=\"No recent activities\" />\n                    </ListItem>\n                  )}\n                </List>\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}